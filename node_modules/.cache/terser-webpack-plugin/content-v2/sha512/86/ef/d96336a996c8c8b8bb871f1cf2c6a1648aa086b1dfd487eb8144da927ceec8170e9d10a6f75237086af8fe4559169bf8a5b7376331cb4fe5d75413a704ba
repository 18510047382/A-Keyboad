{"code":"!function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){const o=r(1);window.aKeyboard={keyboard:o}},function(e,t){e.exports=class{constructor(e){if(\"object\"!=typeof e)return void console.error('aKeyboard: The obj parameter needs to be an object <In \"new aKeyboard()\">');const t=document.querySelector(e.el);let r=\"\";if(\"object\"==typeof e.style)for(let t in e.style)r+=t+\": \"+e.style[t]+\";\";let o='<div class=\"akeyboard-keyboard\" style=\"'+r+'\">',n=[];for(let e=1;e<10;e++)n.push(e.toString());n.push(\"0\");const a=[[\"`\"].concat(n).concat([\"-\",\"=\",\"Delete\"]),[\"Tab\",\"q\",\"w\",\"e\",\"r\",\"t\",\"y\",\"u\",\"i\",\"o\",\"p\",\"[\",\"]\",\"\\\\\"],[\"Caps\",\"a\",\"s\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\";\",\"'\",\"Enter\"]];console.log(a),o+=\"</div>\",t.innerHTML=o}inputOn(e,t){if(\"string\"!=typeof e)return void console.error('aKeyboard: The ele parameter needs to be a string <In \"aKeyboard.inputOn()\">');if(\"string\"!=typeof t)return void console.error('aKeyboard: The inputEle parameter needs to be a string <In \"aKeyboard.inputOn()\">');const r=document.querySelector(r);document.querySelector(t)}}}]);","extractedComments":[]}